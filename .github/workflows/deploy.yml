name: Deploy Vault to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Preprocess vault_config.json
        run: |
          # Replace placeholders with secrets
          AWS_KMS_KEY_ID="${{ secrets.AWS_KMS_KEY_ID }}" \
          AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          envsubst < vault_config.json > vault_config_processed.json
          mv vault_config_processed.json vault_config.json
          jq . vault_config.json

      - name: Copy repository to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_IP }}
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          source: "./*"
          target: "/root/Vault-Docker-Based-"

      - name: Write .env file on VPS
        run: |
          echo "COMPOSE_PROJECT_NAME=vault-prod" > env.txt
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> env.txt
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> env.txt
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> env.txt
          echo "AWS_KMS_KEY_ID=${{ secrets.AWS_KMS_KEY_ID }}" >> env.txt
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.VPS_IP }} \
            "mkdir -p /root/Vault-Docker-Based- && cat > /root/Vault-Docker-Based-/.env" < env.txt

      - name: Deploy Vault with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            cd /root/Vault-Docker-Based-

            # Stop old containers (ignore errors)
            sudo docker compose -f docker-compose.yml --project-name vault-prod down --remove-orphans || true

            # Pull latest images
            sudo docker compose -f docker-compose.yml --project-name vault-prod pull

            # Start Vault containers
            sudo docker compose -f docker-compose.yml --project-name vault-prod up -d --build

            # Wait for Vault to become healthy
            for i in {1..30}; do
              if docker inspect vault | grep -q '"Status": "healthy"'; then
                echo "Vault is healthy"
                break
              fi
              echo "Waiting for Vault to become healthy..."
              sleep 5
            done

            # Wait for vault-init to complete
            for i in {1..30}; do
              if docker inspect vault-init | grep -q '"Status": "exited"'; then
                echo "vault-init has completed"
                break
              fi
              echo "Waiting for vault-init to complete..."
              sleep 5
            done

            # Show vault-init output
            ls -l vault-init/output || echo "ERROR: vault-init/output not found"
            cat vault-init/output/* || echo "No initialization output"

            # Show containers and logs
            docker ps -a
            docker logs vault
            docker logs vault-init
